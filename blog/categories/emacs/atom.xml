<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Emacs | Donny Sharing Thoughts]]></title>
  <link href="http://dwinston.github.io/blog/categories/emacs/atom.xml" rel="self"/>
  <link href="http://dwinston.github.io/"/>
  <updated>2014-02-02T20:51:30-08:00</updated>
  <id>http://dwinston.github.io/</id>
  <author>
    <name><![CDATA[Donny Winston]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A symbol as a chest of drawers]]></title>
    <link href="http://dwinston.github.io/blog/2014/02/02/a-symbol-as-a-chest-of-drawers/"/>
    <updated>2014-02-02T20:37:25-08:00</updated>
    <id>http://dwinston.github.io/blog/2014/02/02/a-symbol-as-a-chest-of-drawers</id>
    <content type="html"><![CDATA[<p>I&rsquo;m reading <a href="https://www.gnu.org/software/emacs/manual/eintr.html">An Introduction to Programming in Emacs Lisp</a>. I like this passage:</p>

<blockquote><p>A symbol can have both a function definition and a value attached to it at the
same time. Or it can have just one or the other. The two are separate. This is
somewhat similar to the way the name Cambridge can refer to the city in
Massachusetts and have some information attached to the name as well, such as
&ldquo;great programming center&rdquo;.</p>

<p>Another way to think about this is to imagine a symbol as being a chest of
drawers. The function definition is put in one drawer, the value in another, and
so on. What is put in the drawer holding the value can be changed without
affecting the contents of the drawer holding the function definition, and
vice-versa.</p></blockquote>

<p>English works this way. The symbol <code>drive</code> has (several) function/verb and
value/noun definitions, as do many other English symbols. This overloading of
symbols is common in human languages but is uncommon in computer programming
languages. Emacs Lisp is a so-called &ldquo;Lisp-2&rdquo; because it can associate a symbol
with two or more different kinds of things at the same time, as opposed to a
&ldquo;Lisp-1&rdquo; like Scheme.</p>
]]></content>
  </entry>
  
</feed>
